name: Build and Deploy APP

on:
  push:
    branches: [ "main" ]

jobs:

  build-application:
    name: Build Application and Deploy Image
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Set up JDK    
      uses: actions/setup-java@v1      
      with:        
       java-version: 1.11
       
    - name: Build with Maven      
      run: mvn clean install -DskipTests
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and publish image to GCR
      uses: carbonchain/action-container-registry@v1.1
      with:
        project_id: ${{ secrets.GCP_SERVICE_ID }}
        dockerfile: ./Dockerfile
        image: gcr.io/${{ secrets.GCP_SERVICE_ID }}/bioautoml-api
        service_account_key: ${{ secrets.GCLOUD_AUTH }}
        
  deploy:
    name: Deploy to GCP
    needs: build-application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: GCP Auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}
        
    - name: Deploy to GCP
      uses: 'google-github-actions/deploy-cloudrun@v1'
      with:
        image: gcr.io/${{ secrets.GCP_SERVICE_ID }}/bioautoml-api
        service: ${{ secrets.GCP_SERVICE_ID }}
        flags: --port=${{ secrets.APP_APPLICATION_PORT }}
        env_vars: 
          PROFILE=${{ secrets.APP_PROFILE }},
          MAX_FILE_SIZE=${{ secrets.APP_MAX_FILE_SIZE }},
          MAX_REQUEST_SIZE=${{ secrets.APP_MAX_REQUEST_SIZE }},
          JWT_SECRET=${{ secrets.APP_JWT_SECRET }},
          JWT_EXPIRATION=${{ secrets.APP_JWT_EXPIRATION }},
          AWS_SECRET=${{ secrets.APP_AWS_SECRET }},
          AWS_ACCESS=${{ secrets.APP_AWS_ACCESS }},
          AWS_S3_BUCKET_NAME=${{ secrets.APP_AWS_S3_BUCKET_NAME }},
          OUTPUT_INIT_PATH=${{ secrets.APP_OUTPUT_INIT_PATH }},
          OUTPUT_END_PATH=${{ secrets.APP_OUTPUT_END_PATH }},
          APPLICATION_PORT=${{ secrets.APP_APPLICATION_PORT }},
          POSTGRES_URL=${{ secrets.APP_POSTGRES_URL }},
          POSTGRES_USERNAME=${{ secrets.APP_POSTGRES_USERNAME }},
          POSTGRES_PASSWORD=${{ secrets.APP_POSTGRES_PASSWORD }},
          RABBITMQ_ADDRESS=${{ secrets.APP_RABBITMQ_ADDRESS }}
          
        
        
